@charset "utf-8";

@import '../../assets/sass/partials/variables';
@import '../../assets/sass/partials/mixins';
@import '../../assets/sass/partials/extensions';

// VARS
$circle: 85px;
$circle-width-hover: 0.04em;

// colors default
$primary-color: #307bbb;
$secondary-color: #ccc;
$bg-color: #f5f5f5;

%pieCircle {
	border-width: 5px;
	border-style: solid;
	width: 85px;
	border-radius: 50%;
	height: 85px;
}
// CIRCLE
// classes 2 extend
.rect-auto {
	clip: rect(auto, auto, auto, auto);
}
.pie {
	position: absolute;
	left: 0;
	top: 0;
	border-color: $primary-color;
	clip: rect(0em, 0.5em, 1em, 0em);
	@include rotate(0deg);
}

app-progress-loader {
	min-height: 100px;
	position: relative;
	> div {
		@extend %floatToCenter;
		.c100 {
			position: relative;
			font-size: 100px;
			width: 100px;
			height: 100px;
			border-radius: 50%;
			float: left;
			// background-color: transparent;
			*,
			*:before,
			*:after {
				@include box-sizing(content-box);
			}
			// center circle to its parent
			&.center {
				float: none;
				margin: 0 auto;
			}
			// centered value inside circle
			> span {
				@extend %floatToCenter;
				height: 40px;
				width: 40px;
				z-index: 1;
				display: flex;
			}
			// background inside the circle
			&:before {
				@extend %floatToCenter;
				display: block;
				content: '';
				@extend %pieCircle;
				border-color: $bg-color;
			}
			// the slice (mask)
			.slice {
				@extend %floatToCenter;
				width: 95px;
				height: 95px;
				clip: rect(0em, 1em, 1em, 0.5em);
			}

			// circle to show the status
			.bar {
				@extend .pie;
				@extend %pieCircle;
			}
			// hover styles
			&:hover {
				cursor: default;
			}
			// loop to create all needed elements automatically
			@for $j from 51 through 100 {
				&.p#{$j} .slice {
					@extend .rect-auto;
				}

				&.p#{$j} .bar:after {
					@include rotate(180deg);
				}

				&.p#{$j} .fill {
					@extend .pie;
					@extend %pieCircle;
					@include rotate(180deg);
				}
			}
			// loop to rotate all 100 circles
			@for $j from 1 through 100 {
				&.p#{$j} .bar {
					@include rotate((360/100 * $j) + deg);
				}
			}
		}
	}
}
